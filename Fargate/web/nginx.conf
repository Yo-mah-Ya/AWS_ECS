worker_processes  1;
error_log /var/log/nginx/error.log warn;
events {
    worker_connections 512;
}
env SERVER_NAME;

http {
    #proxy_passにドメイン名を記述している場合、そのドメインに紐づくIPはNginx起動時に名前解決されている。
    #もし、起動時に得たIPがヘルスチェックに引っ掛かり停止してしまったら、アクセスしても接続できない。
    #そうならないようにキャッシュを削除し、毎度名前解決するようにするのがベストプラクティス。
    perl_set $server_name_from_env 'sub { return $ENV{"SERVER_NAME"}; }';
    server {
        listen  80;
        charset UTF-8;


        #location内のresolverの値は AmazonProvidedDNS の値です。
        #これはVPC IPv4 ネットワークの範囲に 2 をプラスした値です。
        #例えば、10.0.0.0/16 ネットワークの DNS サーバーの位置は 10.0.0.2 となります。


        #location /get/ { proxy_pass http://$endpoint:3000/;}　において
        #http://xxx:3000/get/name  でアクセスが来た場合 http://$endpoint:3000/name へプロキシされる
        #
        #location /get/ { proxy_pass http://$endpoint:3000;} の場合は
        #http://xxx:3000/get/name  でアクセスが来た場合 http://$endpoint:3000/get/name へプロキシされる
        #
        #違いは proxy_pass のプロキシ先の終端に / が入っているか否かである。 / が入っている完全URIであれば location に書かれたパスは無視される。

        location / {
            resolver 192.168.0.2 valid=5s; # 5秒ごとに問い合わせ
            set $endpoint $server_name_from_env;
            proxy_pass http://$endpoint:3000;
            #$host リクエストヘッダのHost、ない場合はサーバ名
            proxy_set_header    Host    $host;
        }

        location /healthcheck/ {
            resolver 192.168.0.2 valid=5s; # 5秒ごとに問い合わせ
            set $endpoint $server_name_from_env;
            proxy_pass http://$endpoint:3000;
            #$host リクエストヘッダのHost、ない場合はサーバ名
            proxy_set_header    Host    $host;
        }
    }
}
